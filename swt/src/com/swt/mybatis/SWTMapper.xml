<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.swt.mybatis.SWTMapper.xml">
	 <select id="bestList" resultType="com.swt.dto.ProductDTO">
	 <![CDATA[
	 	SELECT * 
		FROM (SELECT * FROM tbl_product
		      ORDER BY p_good DESC)
		WHERE rownum <= 5
	 ]]>
	 </select>
	 <select id="newList" resultType="com.swt.dto.ProductDTO">
	 <![CDATA[
	 	SELECT * 
		FROM (SELECT * FROM tbl_product
		      ORDER BY p_indate DESC)
		WHERE rownum <= 5
	 ]]>
	 
	 </select>
	 
	 <!-- 21. 매개변수로 전달받은 id값을 sql문에 바인딩변수로 넣고 sql문 실행(DB로 이동)-->
	 <select id="idCheck" parameterType="String" resultType="String">
	 	SELECT id 
	 	FROM tbl_member
	 	WHERE id = #{id}
	 </select>

	<!-- 이클립스에서 오는건 parametertpye DB에서 오는건 resultType(0과1로만 오면 생략가능) -->
	<insert id="memInsert" parameterType="com.swt.dto.MemberDTO">
		INSERT INTO tbl_member(id,pw,name,bir_yy,bir_mm,bir_dd,phone,email,zipcode,addr1,addr2)
		VALUES(#{id},#{pw},#{name},#{bir_yy},#{bir_mm},#{bir_dd},#{phone},#{email},#{zipcode},#{addr1},#{addr2})
	</insert>

	<select id="loginCheck" parameterType="com.swt.dto.MemberDTO" resultType="com.swt.dto.MemberDTO">
		SELECT * FROM tbl_member
		WHERE id=#{id} AND pw=#{pw}
	</select>
	
	<update id="memUpdate" parameterType="com.swt.dto.MemberDTO">
		UPDATE tbl_member SET
			name = #{name},
			phone = #{phone},
			email = #{email},
			zipcode = #{zipcode},
			addr1 = #{addr1},
			addr2 = #{addr2}
		WHERE id = #{id}
	</update>

	<select id="memOne" parameterType="String" resultType="com.swt.dto.MemberDTO">
		SELECT * FROM tbl_member
		WHERE id = #{id}
	</select>
	
	
	<select id="pwCheck" parameterType="hashmap" resultType="int">
		SELECT COUNT(*) FROM tbl_member
		WHERE id = #{id} AND pw = #{pw}
	</select>
	
	<update id="pwUpdate" parameterType="hashmap">
		UPDATE tbl_member SET
			pw = #{pw}
		WHERE id = #{id}
	</update>
	<delete id="memDelete" parameterType="String">
		DELETE FROM tbl_member
		WHERE id = #{id}
	</delete>
	
	<!-- 게시판 -->
	<select id="totalCount" resultType="int">
		SELECT COUNT(bno)
		FROM tbl_board
		WHERE bno > 0
	   <if test="search_option == 1">
   			AND title LIKE '%'||#{keyword}||'%' OR content LIKE '%'||#{keyword}||'%'
	   </if>
	   <if test="search_option == 2">
	   		AND title LIKE '%'||#{keyword}||'%'
	   </if>
	   <if test="search_option == 3">
	   		AND content LIKE '%'||#{keyword}||'%'
	   </if>
	   <if test="search_option == 4">
	   		AND writer LIKE '%'||#{keyword}||'%'
	   </if>
		
	</select>
	
	<!-- listAll 기본적으로 띄워주는거, 정렬로 띄워주는 거, 검색으로 띄워주는 게 있음 -->
	<!-- criDto.getSort_type(); == new 또는 reply 또는 good 또는 view  -->
	<select id="listAll" resultType="com.swt.dto.BoardDTO">
		SELECT *
		FROM (SELECT rownum rnum, a.*
     		 FROM (SELECT *
           		   FROM tbl_board
           		   WHERE bno > 0
           		   <if test="search_option == 1">
           		   		AND title LIKE '%'||#{keyword}||'%' OR content LIKE '%'||#{keyword}||'%'
           		   </if>
           		   <if test="search_option == 2">
           		   		AND title LIKE '%'||#{keyword}||'%'
           		   </if>
           		   <if test="search_option == 3">
           		   		AND content LIKE '%'||#{keyword}||'%'
           		   </if>
           		   <if test="search_option == 4">
           		   		AND writer LIKE '%'||#{keyword}||'%'
           		   </if>
           		   <if test="sort_type == 'new'">
           		   	 ORDER BY bno DESC
           		   </if>
           		   <if test="sort_type == 'good'">
           		   	 ORDER BY goodcnt DESC, bno DESC
           		   </if>
           		   <if test="sort_type == 'reply'">
           		   	 ORDER BY replycnt DESC, bno DESC
           		   </if>
           		   <if test="sort_type == 'view'">
           		   	 ORDER BY viewcnt DESC, bno DESC
           		   </if>
                   ) a
             ) WHERE rnum BETWEEN #{pageStart} AND #{perPageNum}
	</select>
	
	<select id="view" resultType="com.swt.dto.BoardDTO" parameterType="String">
		SELECT * 
		FROM tbl_board
		WHERE bno = #{bno}
	
	</select>
	
	<update id="viewCnt" parameterType="String">
		UPDATE tbl_board
			SET viewcnt = viewcnt + 1
		WHERE bno = #{bno}
	</update>
	
	<update id="replyCntUpdate">
		UPDATE tbl_board 
		 <if test="flag == 'plus'">
	   		 SET replycnt = replycnt + 1
	   	 </if>
	   	 <if test="flag == 'minus'">
	   	 	SET replycnt = replycnt - 1
	   	 </if>
		WHERE bno = #{bno}
	</update>
	
	
	<select id="replyList" parameterType="String" resultType="com.swt.dto.ReplyDTO">
		SELECT * FROM tbl_reply
		WHERE bno = #{bno}
		ORDER BY rno
	</select>
	
	<insert id="replyAdd" parameterType="com.swt.dto.ReplyDTO">
		INSERT INTO tbl_reply(rno, content, writer, bno)
		VALUES(seq_reply.NEXTVAL, #{content}, #{writer}, #{bno})
	</insert>
	
	<delete id="replyRemove" parameterType="int">
		DELETE FROM tbl_reply 
		WHERE rno=#{rno}
	</delete>
	
	<insert id="contentRegister" parameterType="com.swt.dto.BoardDTO">
		INSERT INTO tbl_board(bno,title,content,writer, filename, filesize)
		VALUES(seq_board.NEXTVAL,#{title},#{content},#{writer}, #{filename}, #{filesize})
	</insert>
	
	<update id="contentModify" parameterType="com.swt.dto.BoardDTO">
		UPDATE tbl_board
	   	 	SET title = #{title},
	        	content = #{content},
	        	filename = #{filename},
	        	filesize = #{filesize}
		WHERE bno = #{bno}
	</update>
	
	<!-- 게시글 삭제 -->
	<delete id="contentDelete" parameterType="int">
		DELETE FROM tbl_board 
		WHERE bno = #{bno}
	</delete>
	
	<!--currval 마지막 시퀀스를 가져오는 것  -->
	<select id="boardBno" resultType="int">
		SELECT seq_board.currval
		FROM dual
	</select>
	
</mapper>